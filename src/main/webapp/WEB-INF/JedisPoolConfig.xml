<?xml version="1.0"?>
<JedisPoolConf>
	
	<!-- 视频回放观看人数 -->
	<redisSource name="BangVideoSource">
		<connectionHost>redis3.kktv2.com</connectionHost>
	    <connectionPort>6379</connectionPort>
	    <connectionPassword>youknowthat</connectionPassword>
	    <connectionDatabase>2</connectionDatabase>
	    <connectionTimeOut>5000</connectionTimeOut>
	    <maxActive>10</maxActive>
	    <maxIdle>5</maxIdle>
	    <minIdle>1</minIdle>
	    <testOnBorrow>true</testOnBorrow>
	    <testOnReturn>true</testOnReturn>
	    <testWhileIdle>true</testWhileIdle>
	    <maxWait>3000</maxWait>
	</redisSource>
	
	<!-- 192.168.100.19 6383 tshowtask 10 -->
    <redisSource name="BangLevel">
    	<!-- Redis Server Host -->
	  	<connectionHost>redis1.kktv2.com</connectionHost>
	  	<!-- Redis Server Port -->
	  	<connectionPort>6379</connectionPort>
	  	<!-- Redis Server Password -->
	  	<connectionPassword>youknowthat</connectionPassword>
	  	<!-- Redis Server Database -->
	  	<connectionDatabase>0</connectionDatabase>
	  	<!-- Redis Server TimeOut -->
	  	<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
	  	<maxActive>10</maxActive>
	  	<!-- Number of connections to Redis that just sit there and do nothing -->
	  	<maxIdle>5</maxIdle>
	  	<!-- Minimum number of idle connections to Redis - these can be seen as always open and ready to serve -->
	  	<minIdle>1</minIdle>
	  	<!-- Tests whether connection is dead when connection retrieval method is called -->
	  	<testOnBorrow>true</testOnBorrow>
	  	<!-- Tests whether connection is dead when returning a connection to the pool -->
	  	<testOnReturn>true</testOnReturn>
	  	<!-- Tests whether connections are dead during idle periods -->
	  	<testWhileIdle>true</testWhileIdle>
	  	<!-- Maximum time, in milliseconds, to wait for a resource when exausted action is set to WHEN_EXAUSTED_BLOCK -->
	  	<maxWait>3000</maxWait>
    </redisSource>
	
	<redisSource name="RoomInvition">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>
	
	<redisSource name="SearchWords">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>
	
	<redisSource name="Channel">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>
	
	<redisSource name="News">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Redis Server DB -->
		<connectionDatabase>5</connectionDatabase>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>
	
	<redisSource name="NewsV2">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Redis Server DB -->
		<connectionDatabase>5</connectionDatabase>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>
	
	<redisSource name="Guess">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<redisSource name="FamilyHonorCache">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<redisSource name="LotteryCache">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
	  	<!-- Redis Server Database -->
	  	<connectionDatabase>0</connectionDatabase>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<!-- 192.168.100.10 6379 -->
	<redisSource name="HotData">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>
	
	<!-- 192.168.100.10 6379 -->
    <redisSource name="UserHot">
		<!-- Redis Server Host -->
       	<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
    </redisSource>
	
	<!-- 192.168.100.17 6382 -->
	<redisSource name="UserRelation">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>5</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>3</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<!-- 192.168.100.84 6385 -->
	<redisSource name="UserCar">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>5</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>3</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<!-- 192.168.100.19 6383 -->
	<redisSource name="AppStats">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>5</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>3</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<!-- 192.168.100.17 6385 -->
	<redisSource name="UserRecharge">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>5</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>3</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<!-- 192.168.100.84 6385 -->
	<redisSource name="QQVip">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>5</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>3</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<!-- 192.168.100.17 6385 -->
	<redisSource name="Family">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>5</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>3</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<!-- 192.168.100.17 6385 -->
	<redisSource name="FamilyApply">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>5</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>3</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<!-- 192.168.100.10 6381 -->
	<redisSource name="GiftRecord">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Idle connection checking period -->
		<timeBetweenEvictionRunsMillis>60000</timeBetweenEvictionRunsMillis>
	</redisSource>

	<!-- 192.168.100.84 6381 -->
	<redisSource name="WeekGift">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Idle connection checking period -->
		<timeBetweenEvictionRunsMillis>60000</timeBetweenEvictionRunsMillis>
	</redisSource>

	<!-- 用户消息配置 -->
	<!-- 192.168.100.84 6379 -->
	<redisSource name="UserMessage">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Idle connection checking period -->
		<timeBetweenEvictionRunsMillis>60000</timeBetweenEvictionRunsMillis>
	</redisSource>

	<!-- 192.168.100.84 6381 -->
	<redisSource name="Match">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<!-- 192.168.100.19 6386 -->
	<redisSource name="Sms">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<!-- 192.168.100.84 6383 -->
	<redisSource name="UserProp">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>
	
	<redisSource name="Activity">
    	<!-- Redis Server Host -->
	  	<connectionHost>redis1.kktv2.com</connectionHost>
	  	<!-- Redis Server Port -->
	  	<connectionPort>6379</connectionPort>
	  	<!-- Redis Server Password -->
	  	<connectionPassword>youknowthat</connectionPassword>
	  	<!-- Redis Server Database -->
	  	<connectionDatabase>15</connectionDatabase>
	  	<!-- Redis Server TimeOut -->
	  	<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
	  	<maxActive>10</maxActive>
	  	<!-- Number of connections to Redis that just sit there and do nothing -->
	  	<maxIdle>5</maxIdle>
	  	<!-- Minimum number of idle connections to Redis - these can be seen as always open and ready to serve -->
	  	<minIdle>1</minIdle>
	  	<!-- Tests whether connection is dead when connection retrieval method is called -->
	  	<testOnBorrow>true</testOnBorrow>
	  	<!-- Tests whether connection is dead when returning a connection to the pool -->
	  	<testOnReturn>true</testOnReturn>
	  	<!-- Tests whether connections are dead during idle periods -->
	  	<testWhileIdle>true</testWhileIdle>
	  	<!-- Maximum time, in milliseconds, to wait for a resource when exausted action is set to WHEN_EXAUSTED_BLOCK -->
	  	<maxWait>3000</maxWait>
    </redisSource>
    
	<redisSource name="DragonBoat">
		<connectionHost>redis1.kktv2.com</connectionHost>
		<connectionPort>6379</connectionPort>
		<connectionPassword>youknowthat</connectionPassword>
		<connectionTimeOut>5000</connectionTimeOut>
		<connectionDatabase>14</connectionDatabase>
		<maxActive>10</maxActive>
		<maxIdle>5</maxIdle>
		<minIdle>1</minIdle>
		<testOnBorrow>true</testOnBorrow>
		<testOnReturn>true</testOnReturn>
		<testWhileIdle>true</testWhileIdle>
		<maxWait>3000</maxWait>
	</redisSource>


    <redisSource name="GameRankingList">
		   <connectionHost>redis1.kktv2.com</connectionHost>
		   <connectionPort>6379</connectionPort>
		   <connectionPassword>youknowthat</connectionPassword>
		   <connectionDatabase>15</connectionDatabase>
		   <connectionTimeOut>5000</connectionTimeOut>
		   <maxActive>10</maxActive>
		   <maxIdle>5</maxIdle>
		   <minIdle>1</minIdle>
		   <testOnBorrow>true</testOnBorrow>
		   <testOnReturn>true</testOnReturn>
		   <testWhileIdle>true</testWhileIdle>
		   <maxWait>3000</maxWait>
    </redisSource>
   
   <redisSource name="famlilyRoom">
	    <!-- Redis Server Host -->
	    <connectionHost>redis1.kktv2.com</connectionHost>
	    <!-- Redis Server Port -->
	    <connectionPort>6379</connectionPort>
	    <!-- Redis Server Password -->
	    <connectionPassword>youknowthat</connectionPassword>
	    <!-- Redis Server TimeOut -->
	    <connectionTimeOut>5000</connectionTimeOut>
	    <!-- Maximum active connections to Redis instance -->
	    <maxActive>10</maxActive>
	    <!-- Number of connections to Redis that just sit there and do nothing -->
	    <maxIdle>5</maxIdle>
	    <!-- Minimum number of idle connections to Redis - these can be seen as
	            always open and ready to serve -->
	    <minIdle>1</minIdle>
	    <!-- Tests whether connection is dead when connection retrieval method
	            is called -->
	    <testOnBorrow>true</testOnBorrow>
	    <!-- Tests whether connection is dead when returning a connection to the
	            pool -->
	    <testOnReturn>true</testOnReturn>
	    <!-- Tests whether connections are dead during idle periods -->
	    <testWhileIdle>true</testWhileIdle>
	    <!-- Maximum time, in milliseconds, to wait for a resource when exausted
	            action is set to WHEN_EXAUSTED_BLOCK -->
	    <maxWait>3000</maxWait>
	</redisSource>
	
	<!-- 192.168.100.10 6379 -->
	<redisSource name="KKHallSource">
		<!-- Redis Server Host -->
		<connectionHost>redis1.kktv2.com</connectionHost>
		<!-- Redis Server Port -->
		<connectionPort>6379</connectionPort>
		<!-- Redis Server Password -->
		<connectionPassword>youknowthat</connectionPassword>
		<!-- Redis Server DB -->
		<connectionDatabase>1</connectionDatabase>
		<!-- Redis Server TimeOut -->
		<connectionTimeOut>5000</connectionTimeOut>
		<!-- Maximum active connections to Redis instance -->
		<maxActive>10</maxActive>
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<maxIdle>5</maxIdle>
		<!-- Minimum number of idle connections to Redis - these can be seen as 
			always open and ready to serve -->
		<minIdle>1</minIdle>
		<!-- Tests whether connection is dead when connection retrieval method 
			is called -->
		<testOnBorrow>true</testOnBorrow>
		<!-- Tests whether connection is dead when returning a connection to the 
			pool -->
		<testOnReturn>true</testOnReturn>
		<!-- Tests whether connections are dead during idle periods -->
		<testWhileIdle>true</testWhileIdle>
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted 
			action is set to WHEN_EXAUSTED_BLOCK -->
		<maxWait>3000</maxWait>
	</redisSource>

	<redisSource name="ActorInfoSource">
	  	<connectionHost>redis1.kktv2.com</connectionHost>
	  	<connectionPort>6379</connectionPort>
	  	<connectionPassword>youknowthat</connectionPassword>
	  	<connectionDatabase>15</connectionDatabase>
	  	<connectionTimeOut>5000</connectionTimeOut>
	  	<maxActive>10</maxActive>
	  	<maxIdle>5</maxIdle>
	  	<minIdle>1</minIdle>
	  	<testOnBorrow>true</testOnBorrow>
	  	<testOnReturn>true</testOnReturn>
	  	<testWhileIdle>true</testWhileIdle>
	  	<maxWait>3000</maxWait>
    </redisSource>

	<redisSource name="GamblingSource">
		<connectionHost>redis1.kktv2.com</connectionHost>
		<connectionPort>6379</connectionPort>
		<connectionPassword>youknowthat</connectionPassword>
		<connectionDatabase>5</connectionDatabase>
		<connectionTimeOut>5000</connectionTimeOut>
		<testOnBorrow>true</testOnBorrow>
		<testOnReturn>true</testOnReturn>
		<testWhileIdle>true</testWhileIdle>
		<timeBetweenEvictionRunsMillis>60000</timeBetweenEvictionRunsMillis>
	</redisSource>

	<redisSource name="RankingList">
	  	<connectionHost>redis1.kktv2.com</connectionHost>
	  	<connectionPort>6379</connectionPort>
	  	<connectionPassword>youknowthat</connectionPassword>
	  	<connectionDatabase>15</connectionDatabase>
	  	<connectionTimeOut>5000</connectionTimeOut>
	  	<maxActive>10</maxActive>
	  	<maxIdle>5</maxIdle>
	  	<minIdle>1</minIdle>
	  	<testOnBorrow>true</testOnBorrow>
	  	<testOnReturn>true</testOnReturn>
	  	<testWhileIdle>true</testWhileIdle>
	  	<maxWait>3000</maxWait>
    </redisSource>
    
    <redisSource name="GiftStarSource">
		<connectionHost>redis1.kktv2.com</connectionHost>
		<connectionPort>6379</connectionPort>
		<connectionPassword>youknowthat</connectionPassword>
		<connectionTimeOut>5000</connectionTimeOut>
		<maxActive>5</maxActive>
		<maxIdle>3</maxIdle>
		<minIdle>1</minIdle>
		<testOnBorrow>true</testOnBorrow>
		<testOnReturn>true</testOnReturn>
		<testWhileIdle>true</testWhileIdle>
		<maxWait>3000</maxWait>
	</redisSource>

    <redisSource name="SignInTask">
	  	<connectionHost>redis1.kktv2.com</connectionHost>
	  	<connectionPort>6379</connectionPort>
	  	<connectionPassword>youknowthat</connectionPassword>
	  	<connectionDatabase>15</connectionDatabase>
	  	<connectionTimeOut>5000</connectionTimeOut>
	  	<maxActive>10</maxActive>
	  	<maxIdle>5</maxIdle>
	  	<minIdle>1</minIdle>
	  	<testOnBorrow>true</testOnBorrow>
	  	<testOnReturn>true</testOnReturn>
	  	<testWhileIdle>true</testWhileIdle>
	  	<maxWait>3000</maxWait>
    </redisSource>

    <!-- 房间内消息通道 -->
    <!-- "ip" : "192.168.100.37","port" : 6395,"password" : "channel" -->
    <redisSource name="RoomMessageSource">
	    <connectionHost>redis1.kktv2.com</connectionHost>
	    <connectionPort>6379</connectionPort>
	    <connectionPassword>youknowthat</connectionPassword>
	    <connectionTimeOut>5000</connectionTimeOut>
	    <maxActive>10</maxActive>
	    <maxIdle>5</maxIdle>
	    <minIdle>1</minIdle>
	    <testOnBorrow>true</testOnBorrow>
	    <testOnReturn>true</testOnReturn>
	    <testWhileIdle>true</testWhileIdle>
	    <maxWait>3000</maxWait>
    </redisSource>

	<redisSource name="RoomConfig">
	    <connectionHost>redis1.kktv2.com</connectionHost>
	    <connectionPort>6379</connectionPort>
	    <connectionPassword>youknowthat</connectionPassword>
	    <connectionTimeOut>5000</connectionTimeOut>
	    <connectionDatabase>14</connectionDatabase>
	    <maxActive>10</maxActive>
	    <maxIdle>5</maxIdle>
	    <minIdle>1</minIdle>
	    <testOnBorrow>true</testOnBorrow>
	    <testOnReturn>true</testOnReturn>
	    <testWhileIdle>true</testWhileIdle>
	    <maxWait>3000</maxWait>
    </redisSource>

	<!-- 192.168.100.10 6379 -->
    <redisSource name="GiftInfo">
	    <connectionHost>redis1.kktv2.com</connectionHost>
	    <connectionPort>6379</connectionPort>
	    <connectionPassword>youknowthat</connectionPassword>
	    <connectionDatabase>14</connectionDatabase>
	    <connectionTimeOut>5000</connectionTimeOut>
	    <maxActive>10</maxActive>
	    <maxIdle>5</maxIdle>
	    <minIdle>1</minIdle>
	    <testOnBorrow>true</testOnBorrow>
	    <testOnReturn>true</testOnReturn>
	    <testWhileIdle>true</testWhileIdle>
	    <maxWait>3000</maxWait>
    </redisSource>

    <redisSource name="Messaga">
	    <connectionHost>redis1.kktv2.com</connectionHost>
	    <connectionPort>6379</connectionPort>
	    <connectionPassword>youknowthat</connectionPassword>
	    <connectionDatabase>14</connectionDatabase>
	    <connectionTimeOut>5000</connectionTimeOut>
	    <maxActive>10</maxActive>
	    <maxIdle>5</maxIdle>
	    <minIdle>1</minIdle>
	    <testOnBorrow>true</testOnBorrow>
	    <testOnReturn>true</testOnReturn>
	    <testWhileIdle>true</testWhileIdle>
	    <maxWait>3000</maxWait>
    </redisSource>

	<!-- 手机端消息推送 -->
	<redisSource name="push_source_list">
		<connectionHost>redis1.kktv2.com</connectionHost>
		<connectionPort>6379</connectionPort>
		<connectionPassword>youknowthat</connectionPassword>
		<connectionTimeOut>5000</connectionTimeOut>
		<connectionDatabase>12</connectionDatabase>
		<maxActive>10</maxActive>
		<maxIdle>5</maxIdle>
		<minIdle>1</minIdle>
		<testOnBorrow>true</testOnBorrow>
		<testOnReturn>true</testOnReturn>
		<testWhileIdle>true</testWhileIdle>
		<maxWait>3000</maxWait>
	</redisSource>

</JedisPoolConf>
